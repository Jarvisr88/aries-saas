namespace DevExpress.Mvvm
{
    using DevExpress.Mvvm.Native;
    using System;
    using System.Runtime.CompilerServices;
    using System.Windows.Media;

    public class ApplicationJumpTaskInfo : ApplicationJumpItemInfo, IApplicationJumpTaskInfoInternal, IApplicationJumpItemInfoInternal, IApplicationJumpTask, IApplicationJumpItem
    {
        private const string AutoGeneratedCommandSuffix = "_B132D537-0377-48EB-A905-D03782D8F0B0";
        private string commandId;
        private string workingDirectory;
        private string arguments;
        private string applicationPath;
        private string description;
        private int iconResourceIndex;
        private string iconResourcePath;
        private ImageSource icon;
        private string title;

        public ApplicationJumpTaskInfo Clone() => 
            (ApplicationJumpTaskInfo) base.Clone();

        protected override void CloneCore(ApplicationJumpItemInfo clone)
        {
            base.CloneCore(clone);
            ApplicationJumpTaskInfo info = (ApplicationJumpTaskInfo) clone;
            info.Action = this.Action;
            info.ApplicationPath = this.ApplicationPath;
            info.Arguments = this.Arguments;
            info.Description = this.Description;
            info.Icon = this.Icon;
            info.IconResourceIndex = this.IconResourceIndex;
            info.IconResourcePath = this.IconResourcePath;
            info.Title = this.Title;
            info.WorkingDirectory = this.WorkingDirectory;
            if ((this.CommandId != null) && !this.CommandId.EndsWith("_B132D537-0377-48EB-A905-D03782D8F0B0", StringComparison.Ordinal))
            {
                info.CommandId = this.CommandId;
            }
        }

        protected override ApplicationJumpItemInfo CreateInstanceCore() => 
            new ApplicationJumpTaskInfo();

        void IApplicationJumpTaskInfoInternal.Execute()
        {
            if (this.Action != null)
            {
                this.Action();
            }
            if ((this.Source != null) && (this.Source.Action != null))
            {
                this.Source.Action();
            }
        }

        void IApplicationJumpTaskInfoInternal.SetAutoGeneratedCommandId(string commandId)
        {
            this.CommandId = commandId + "_B132D537-0377-48EB-A905-D03782D8F0B0";
        }

        public string Title
        {
            get => 
                this.title;
            set
            {
                base.AssertIsNotInitialized();
                this.title = value;
            }
        }

        public ImageSource Icon
        {
            get => 
                this.icon;
            set
            {
                base.AssertIsNotInitialized();
                this.icon = value;
            }
        }

        public string IconResourcePath
        {
            get => 
                this.iconResourcePath;
            set
            {
                base.AssertIsNotInitialized();
                this.iconResourcePath = value;
            }
        }

        public int IconResourceIndex
        {
            get => 
                this.iconResourceIndex;
            set
            {
                base.AssertIsNotInitialized();
                this.iconResourceIndex = value;
            }
        }

        public string Description
        {
            get => 
                this.description;
            set
            {
                base.AssertIsNotInitialized();
                this.description = value;
            }
        }

        public string ApplicationPath
        {
            get => 
                this.applicationPath;
            set
            {
                base.AssertIsNotInitialized();
                this.applicationPath = value;
            }
        }

        public string Arguments
        {
            get => 
                this.arguments;
            set
            {
                base.AssertIsNotInitialized();
                this.arguments = value;
            }
        }

        public string WorkingDirectory
        {
            get => 
                this.workingDirectory;
            set
            {
                base.AssertIsNotInitialized();
                this.workingDirectory = value;
            }
        }

        public string CommandId
        {
            get => 
                this.commandId;
            set
            {
                base.AssertIsNotInitialized();
                this.commandId = value;
            }
        }

        public System.Action Action { get; set; }

        protected IApplicationJumpTaskInfoSource Source =>
            (IApplicationJumpTaskInfoSource) base.Source;

        bool IApplicationJumpTaskInfoInternal.IsInitialized =>
            base.IsInitialized;
    }
}

